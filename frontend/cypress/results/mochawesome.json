{
  "stats": {
    "suites": 8,
    "tests": 31,
    "passes": 29,
    "pending": 0,
    "failures": 2,
    "start": "2024-04-05T13:37:38.249Z",
    "end": "2024-04-05T13:37:45.672Z",
    "duration": 7423,
    "testsRegistered": 31,
    "passPercent": 93.54838709677419,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "39e8bf14-b1ce-4a00-8a5f-f69edee54422",
      "title": "",
      "fullFile": "cypress\\e2e\\backend\\endpoints.cy.js",
      "file": "cypress\\e2e\\backend\\endpoints.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "472c2d80-bfe1-41ec-9294-12c52e8441b4",
          "title": "GET /api/products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 200 - success",
              "fullTitle": "GET /api/products returns 200 - success",
              "timedOut": null,
              "duration": 834,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  expect(response.status).to.be.eq(200);\n  expect(response.headers[\"content-type\"]).to.contains(\"application/json\");\n  for (let product of response.body) {\n    expect(product.id).to.be.a(\"string\");\n    expect(product.id).to.be.match(_pattern.UUIDv4);\n    expect(product.name).to.be.a(\"string\");\n    expect(product.description).to.be.a(\"string\");\n    expect(product.category).to.be.a(\"string\");\n    expect(product.originalPrice).to.be.a(\"number\");\n    expect(product.pictureUrl).to.be.a(\"string\");\n    expect(product.endDate).to.be.a(\"string\");\n    expect(product.endDate).to.match(_pattern.IOS8601);\n    expect(product.seller.id).to.be.a(\"string\");\n    expect(product.seller.username).to.be.a(\"string\");\n    for (let bid of product.bids) {\n      expect(bid.id).to.be.a(\"string\");\n      expect(bid.id).to.match(_pattern.UUIDv4);\n      expect(bid.price).to.be.a(\"number\");\n      expect(bid.date).to.be.a(\"string\");\n      expect(bid.date).to.match(_pattern.IOS8601);\n    }\n    const fixtureProduct = response.body.find(item => {\n      return item.id === \"a0f7c522-78f8-442e-a55d-642cfe566634\";\n    });\n    expect(fixtureProduct.id).to.be.eq(\"a0f7c522-78f8-442e-a55d-642cfe566634\");\n    expect(fixtureProduct.name).to.be.eq(\"Lot de casseroles\");\n    expect(fixtureProduct.description).to.be.eq(\"Ensemble de casseroles de qualité supérieure pour répondre à tous vos besoins culinaires.\");\n    expect(fixtureProduct.category).to.be.eq(\"Cuisine\");\n    expect(fixtureProduct.originalPrice).to.be.eq(40);\n    expect(fixtureProduct.pictureUrl).to.be.eq(\"https://image.noelshack.com/fichiers/2023/12/4/1679526253-65535-51812547429-fe1cc0d832-c-512-512-nofilter.jpg\");\n    expect(fixtureProduct.seller.id).to.be.eq(_tokens.aliceId);\n    expect(fixtureProduct.seller.username).to.be.eq(\"alice\");\n    expect(fixtureProduct.bids.some(bid => bid.price === 65)).to.be.true;\n  }\n});",
              "err": {},
              "uuid": "404741a1-707b-49eb-9e6b-37d101f3018d",
              "parentUUID": "472c2d80-bfe1-41ec-9294-12c52e8441b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "404741a1-707b-49eb-9e6b-37d101f3018d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf367820-1d46-4a1e-842a-d45d4261e15a",
          "title": "POST /api/products",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 401 - not authorized",
              "fullTitle": "POST /api/products returns 401 - not authorized",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products\",\n  headers: {\n    Authorization: `Bearer BAD_TOKEN`\n  },\n  body: {\n    name: \"New Product\",\n    description: \"This is a new product\",\n    category: \"Electronics\",\n    originalPrice: 99,\n    pictureUrl: \"https://example.com/product.jpg\",\n    endDate: \"2023-04-01T00:00:00.000Z\"\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 401);",
              "err": {},
              "uuid": "53a56efb-3bae-4da1-8d00-c2acaaeddbdd",
              "parentUUID": "cf367820-1d46-4a1e-842a-d45d4261e15a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 201 - created",
              "fullTitle": "POST /api/products returns 201 - created",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a new product\ncy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    name: \"New Product\",\n    description: \"This is a new product\",\n    category: \"Electronics\",\n    originalPrice: 99,\n    pictureUrl: \"https://example.com/product.jpg\",\n    endDate: \"2023-04-01T00:00:00.000Z\"\n  }\n}).then(response => {\n  // Assert that the response is as expected\n  expect(response.status).to.eq(201);\n  expect(response.body.id).to.be.match(_pattern.UUIDv4);\n  expect(response.body.name).to.eq(\"New Product\");\n  expect(response.body.description).to.eq(\"This is a new product\");\n  expect(response.body.category).to.eq(\"Electronics\");\n  expect(response.body.originalPrice).to.eq(99);\n  expect(response.body.pictureUrl).to.eq(\"https://example.com/product.jpg\");\n  expect(response.body.endDate).to.eq(\"2023-04-01T00:00:00.000Z\");\n  expect(response.body.sellerId).to.eq(_tokens.aliceId);\n});",
              "err": {},
              "uuid": "0c8684f3-4898-4ca3-ae11-84b0aa0911e1",
              "parentUUID": "cf367820-1d46-4a1e-842a-d45d4261e15a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 400 - missing or invalid fields",
              "fullTitle": "POST /api/products returns 400 - missing or invalid fields",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a new product\ncy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    // Missing name: \"Machine à écrire\",\n    description: \"Machine à écrire vintage en parfait état de fonctionnement pour une expérience d'écriture unique et authentique.\",\n    pictureUrl: \"https://picsum.photos/id/403/512/512\",\n    category: \"High-Tech\",\n    originalPrice: 200,\n    endDate: \"2026-01-01T09:00:00Z\"\n  },\n  failOnStatusCode: false\n}).then(req => {\n  expect(req.status).to.be.eq(400);\n  expect(req.body.error).to.be.eq(\"Invalid or missing fields\");\n  expect(req.body.details).to.exist;\n});",
              "err": {},
              "uuid": "1fbb2578-e804-45a1-b6ff-eb11e83addf4",
              "parentUUID": "cf367820-1d46-4a1e-842a-d45d4261e15a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check mutation - object created in database",
              "fullTitle": "POST /api/products check mutation - object created in database",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a new product\n(0, _orm.getProducts)().then(({\n  products: productsBeforeCreation\n}) => {\n  (0, _orm.createProduct)().then(({\n    product\n  }) => {\n    (0, _orm.getProducts)().then(({\n      products: productsAfterCreation\n    }) => {\n      const newProducts = productsAfterCreation.filter(product => productsBeforeCreation.every(existingProduct => existingProduct.id !== product.id));\n      expect(newProducts.length).to.be.eq(1);\n      const newProduct = newProducts[0];\n      expect(newProduct.id).to.be.match(_pattern.UUIDv4);\n      expect(newProduct.name).to.eq(name);\n      expect(newProduct.description).to.eq(product.description);\n      expect(newProduct.category).to.eq(product.category);\n      expect(newProduct.originalPrice).to.eq(product.originalPrice);\n      expect(newProduct.pictureUrl).to.eq(product.pictureUrl);\n      expect(newProduct.endDate).to.eq(product.endDate);\n      expect(newProduct.seller.id).to.eq(_tokens.aliceId);\n      expect(newProduct.seller.username).to.eq(\"alice\");\n    });\n  });\n});",
              "err": {},
              "uuid": "ec6e06c0-f578-4ade-98d9-e43257921f67",
              "parentUUID": "cf367820-1d46-4a1e-842a-d45d4261e15a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53a56efb-3bae-4da1-8d00-c2acaaeddbdd",
            "0c8684f3-4898-4ca3-ae11-84b0aa0911e1",
            "1fbb2578-e804-45a1-b6ff-eb11e83addf4",
            "ec6e06c0-f578-4ade-98d9-e43257921f67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ace019a-cc52-445e-84ec-ddd1c047ffe3",
          "title": "GET /api/products/:productId",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 404 - not found",
              "fullTitle": "GET /api/products/:productId returns 404 - not found",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: \"http://localhost:3000/api/products/not-existing-id\",\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 404);",
              "err": {},
              "uuid": "1675f410-706c-422e-b6ed-40acac7b293f",
              "parentUUID": "1ace019a-cc52-445e-84ec-ddd1c047ffe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 200 - success",
              "fullTitle": "GET /api/products/:productId returns 200 - success",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  expect(response.status).to.be.eq(200);\n  expect(response.headers[\"content-type\"]).to.includes(\"application/json\");\n  const product = response.body;\n  expect(product.id).to.be.eq(\"a0f7c522-78f8-442e-a55d-642cfe566634\");\n  expect(product.name).to.be.eq(\"Lot de casseroles\");\n  expect(product.description).to.be.eq(\"Ensemble de casseroles de qualité supérieure pour répondre à tous vos besoins culinaires.\");\n  expect(product.category).to.be.eq(\"Cuisine\");\n  expect(product.originalPrice).to.be.eq(40);\n  expect(product.pictureUrl).to.be.eq(\"https://image.noelshack.com/fichiers/2023/12/4/1679526253-65535-51812547429-fe1cc0d832-c-512-512-nofilter.jpg\");\n  expect(product.seller.id).to.be.eq(_tokens.aliceId);\n  expect(product.seller.username).to.be.eq(\"alice\");\n  const bid = response.body.bids.find(bid => bid.price === 65);\n  expect(bid.id).to.be.eq(\"8ccc6e79-f3c9-43e9-b47e-5be7b84d8de7\");\n  expect(bid.bidder.id).to.be.eq(_tokens.charlyId);\n  expect(bid.bidder.username).to.be.eq(\"charly\");\n});",
              "err": {},
              "uuid": "a5462c97-f188-424d-aad5-6e78bc532516",
              "parentUUID": "1ace019a-cc52-445e-84ec-ddd1c047ffe3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1675f410-706c-422e-b6ed-40acac7b293f",
            "a5462c97-f188-424d-aad5-6e78bc532516"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
          "title": "PUT /api/products/:productId",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 401 - not authorized",
              "fullTitle": "PUT /api/products/:productId returns 401 - not authorized",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: endpoint,\n  headers: {\n    Authorization: `Bearer BAD_TOKEN`\n  },\n  body: {\n    name: \"Machine à écrire\",\n    description: \"Machine à écrire vintage en parfait état de fonctionnement pour une expérience d'écriture unique et authentique.\",\n    pictureUrl: \"https://picsum.photos/id/403/512/512\",\n    category: \"High-Tech\",\n    originalPrice: 200,\n    endDate: \"2026-01-01T09:00:00Z\"\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 401);",
              "err": {},
              "uuid": "68160394-7c37-4894-af64-35344c5f6c7b",
              "parentUUID": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 200 - success, when owner edit",
              "fullTitle": "PUT /api/products/:productId returns 200 - success, when owner edit",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"PUT\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    name: \"Machine à écrire\",\n    description: \"Machine à écrire vintage en parfait état de fonctionnement pour une expérience d'écriture unique et authentique.\",\n    pictureUrl: \"https://picsum.photos/id/403/512/512\",\n    category: \"High-Tech\",\n    originalPrice: 200,\n    endDate: \"2026-01-01T09:00:00Z\"\n  }\n}).its(\"status\").should(\"equal\", 200);",
              "err": {},
              "uuid": "5c62e27e-8fb4-4239-bac6-8e2cdcfe9149",
              "parentUUID": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 403 - forbidden, when non owner edit",
              "fullTitle": "PUT /api/products/:productId returns 403 - forbidden, when non owner edit",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"PUT\",\n  headers: {\n    Authorization: `Bearer ${_tokens.bobToken}`\n  },\n  body: {\n    name: \"Machine à écrire\",\n    description: \"Machine à écrire vintage en parfait état de fonctionnement pour une expérience d'écriture unique et authentique.\",\n    pictureUrl: \"https://picsum.photos/id/403/512/512\",\n    category: \"High-Tech\",\n    originalPrice: 200,\n    endDate: \"2026-01-01T09:00:00Z\"\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 403);",
              "err": {},
              "uuid": "1d6fde7e-86db-41cf-b157-bee9e91cc643",
              "parentUUID": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 200 - success, when admin edit",
              "fullTitle": "PUT /api/products/:productId returns 200 - success, when admin edit",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"PUT\",\n  headers: {\n    Authorization: `Bearer ${_tokens.adminToken}`\n  },\n  body: {\n    name: \"Machine à écrire\",\n    description: \"Machine à écrire vintage en parfait état de fonctionnement pour une expérience d'écriture unique et authentique.\",\n    pictureUrl: \"https://picsum.photos/id/403/512/512\",\n    category: \"High-Tech\",\n    originalPrice: 200,\n    endDate: \"2026-01-01T09:00:00Z\"\n  }\n}).its(\"status\").should(\"equal\", 200);",
              "err": {},
              "uuid": "e1cb229e-0c30-4048-80f0-a394642893b2",
              "parentUUID": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 404 - not found",
              "fullTitle": "PUT /api/products/:productId returns 404 - not found",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: \"http://localhost:3000/api/products/not-existing-id\",\n  method: \"PUT\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    name: \"Machine à écrire\",\n    description: \"Machine à écrire vintage en parfait état de fonctionnement pour une expérience d'écriture unique et authentique.\",\n    pictureUrl: \"https://picsum.photos/id/403/512/512\",\n    category: \"High-Tech\",\n    originalPrice: 200,\n    endDate: \"2026-01-01T09:00:00Z\"\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 404);",
              "err": {},
              "uuid": "09c33913-c422-46ae-9301-4521022baecf",
              "parentUUID": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check mutation - object updated in database",
              "fullTitle": "PUT /api/products/:productId check mutation - object updated in database",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newProductData = (0, _orm.buildProduct)();\ncy.request({\n  url: endpoint,\n  method: \"PUT\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    name: newProductData.name,\n    description: newProductData.description,\n    pictureUrl: newProductData.pictureUrl,\n    category: newProductData.category,\n    originalPrice: newProductData.originalPrice,\n    endDate: newProductData.endDate.toISOString()\n  }\n}).then(() => {\n  cy.request(endpoint).then(response => {\n    const product = response.body;\n    expect(response.status).to.be.eq(200);\n    expect(product.id).to.be.eq(\"a0f7c522-78f8-442e-a55d-642cfe566634\");\n    expect(product.name).to.be.eq(newProductData.name);\n    expect(product.description).to.be.eq(newProductData.description);\n    expect(product.category).to.be.eq(newProductData.category);\n    expect(product.originalPrice).to.be.eq(newProductData.originalPrice);\n    expect(product.pictureUrl).to.be.eq(newProductData.pictureUrl);\n    expect(product.endDate).to.be.eq(newProductData.endDate.toISOString());\n    expect(product.seller.id).to.be.eq(_tokens.aliceId);\n    expect(product.seller.username).to.be.eq(\"alice\");\n  });\n});",
              "err": {},
              "uuid": "c699a590-4e81-4aa5-aee0-cefabfac271b",
              "parentUUID": "609bb4be-c58a-49f1-932e-dbcb95cd8d25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68160394-7c37-4894-af64-35344c5f6c7b",
            "5c62e27e-8fb4-4239-bac6-8e2cdcfe9149",
            "1d6fde7e-86db-41cf-b157-bee9e91cc643",
            "e1cb229e-0c30-4048-80f0-a394642893b2",
            "09c33913-c422-46ae-9301-4521022baecf",
            "c699a590-4e81-4aa5-aee0-cefabfac271b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
          "title": "DELETE /api/products/:productId",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 401 - not authorized",
              "fullTitle": "DELETE /api/products/:productId returns 401 - not authorized",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: endpoint,\n  headers: {\n    Authorization: `Bearer BAD_TOKEN`\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 401);",
              "err": {},
              "uuid": "b649acbc-5f5c-4d3c-80c0-89e701955928",
              "parentUUID": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 204 - success, when owner edit",
              "fullTitle": "DELETE /api/products/:productId returns 204 - success, when owner edit",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  }\n}).its(\"status\").should(\"equal\", 204);",
              "err": {},
              "uuid": "84cf3f2a-056c-41f6-b3ba-b2a28fb02d46",
              "parentUUID": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 403 - forbidden, when non owner edit",
              "fullTitle": "DELETE /api/products/:productId returns 403 - forbidden, when non owner edit",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.bobToken}`\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 403);",
              "err": {},
              "uuid": "a5468886-ea40-43e8-8ce8-0d6c1ac462d0",
              "parentUUID": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 204 - success, when admin edit",
              "fullTitle": "DELETE /api/products/:productId returns 204 - success, when admin edit",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.adminToken}`\n  }\n}).its(\"status\").should(\"equal\", 204);",
              "err": {},
              "uuid": "1d26b631-d4fb-4664-be69-b908385d17a0",
              "parentUUID": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 404 - not found",
              "fullTitle": "DELETE /api/products/:productId returns 404 - not found",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: \"http://localhost:3000/api/products/not-existing-id\",\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 404);",
              "err": {},
              "uuid": "d818934d-d6df-463d-bc8d-9a58c548c428",
              "parentUUID": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check mutation - object deleted in database",
              "fullTitle": "DELETE /api/products/:productId check mutation - object deleted in database",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  }\n}).then(response => {\n  expect(response.status).to.be.eq(200);\n  cy.request({\n    url: endpoint,\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${_tokens.aliceToken}`\n    }\n  }).then(response => {\n    expect(response.status).to.be.eq(204);\n    cy.request({\n      url: endpoint,\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${_tokens.aliceToken}`\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.be.eq(404);\n    });\n  });\n});",
              "err": {},
              "uuid": "b6c137c1-f62c-4849-9a72-a409d71334ad",
              "parentUUID": "ae775c13-a110-48ee-b74f-972d6b7ab84d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b649acbc-5f5c-4d3c-80c0-89e701955928",
            "84cf3f2a-056c-41f6-b3ba-b2a28fb02d46",
            "a5468886-ea40-43e8-8ce8-0d6c1ac462d0",
            "1d26b631-d4fb-4664-be69-b908385d17a0",
            "d818934d-d6df-463d-bc8d-9a58c548c428",
            "b6c137c1-f62c-4849-9a72-a409d71334ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb21ba99-1db6-4522-aa31-e351ea9b6a72",
          "title": "POST /api/products/:productId/bids",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 401 - not authorized",
              "fullTitle": "POST /api/products/:productId/bids returns 401 - not authorized",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\",\n  headers: {\n    Authorization: `Bearer BAD_TOKEN`\n  },\n  body: {\n    name: \"New Product\",\n    description: \"This is a new product\",\n    category: \"Electronics\",\n    originalPrice: 99,\n    pictureUrl: \"https://example.com/product.jpg\",\n    endDate: \"2023-04-01T00:00:00.000Z\"\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 401);",
              "err": {},
              "uuid": "a5a6b1ad-4efe-49e7-ba89-bdd163ae1ddd",
              "parentUUID": "cb21ba99-1db6-4522-aa31-e351ea9b6a72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 201 - created",
              "fullTitle": "POST /api/products/:productId/bids returns 201 - created",
              "timedOut": null,
              "duration": 237,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Create a new product\ncy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    price: 42\n  }\n}).then(response => {\n  // Assert that the response is as expected\n  expect(response.status).to.eq(201);\n  expect(response.body.id).to.be.match(_pattern.UUIDv4);\n  expect(response.body.productId).to.be.match(_pattern.UUIDv4);\n  expect(response.body.price).to.be.a(\"number\");\n  expect(response.body.date).to.match(_pattern.IOS8601);\n  expect(response.body.bidderId).to.match(_pattern.UUIDv4);\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFmMmZhZGIxLTBkN2UtNDdhNy05ZDViLWVkMDMxZDY2NWQzZSIsInVzZXJuYW1lIjoiYWxpY2UiLCJlbWFpbCI6ImFsaWNlQGV4YW1wbGUuY29tIiwiYWRtaW4iOmZhbHNlLCJpYXQiOjE2Nzk2MTMwMzh9.KcT42jbNXfNR-0I-bTc_qNdAuCid640tXpkzUtDCoao\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/123.0.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 12\n}\nBody: {\"price\":42}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"75\",\n  \"etag\": \"W/\\\"4b-8K3b7zNX6NCTE0RF6SPLmLmHfKg\\\"\",\n  \"date\": \"Fri, 05 Apr 2024 13:37:41 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"error\": \"Invalid or missing fields\",\n  \"details\": [\n    \"Bid.date cannot be null\"\n  ]\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFmMmZhZGIxLTBkN2UtNDdhNy05ZDViLWVkMDMxZDY2NWQzZSIsInVzZXJuYW1lIjoiYWxpY2UiLCJlbWFpbCI6ImFsaWNlQGV4YW1wbGUuY29tIiwiYWRtaW4iOmZhbHNlLCJpYXQiOjE2Nzk2MTMwMzh9.KcT42jbNXfNR-0I-bTc_qNdAuCid640tXpkzUtDCoao\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/123.0.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 12\n}\nBody: {\"price\":42}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"75\",\n  \"etag\": \"W/\\\"4b-8K3b7zNX6NCTE0RF6SPLmLmHfKg\\\"\",\n  \"date\": \"Fri, 05 Apr 2024 13:37:41 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"error\": \"Invalid or missing fields\",\n  \"details\": [\n    \"Bid.date cannot be null\"\n  ]\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://localhost:63086/__cypress/runner/cypress_runner.js:133123:72)\n    at tryCatcher (http://localhost:63086/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63086/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:63086/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:63086/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:63086/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (http://localhost:63086/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:63086/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:63086/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:63086/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/backend/endpoints.cy.js:495:7)",
                "diff": null
              },
              "uuid": "d1b99782-2985-4ccc-8eff-861c5ffb2f55",
              "parentUUID": "cb21ba99-1db6-4522-aa31-e351ea9b6a72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 400 - missing or invalid fields",
              "fullTitle": "POST /api/products/:productId/bids returns 400 - missing or invalid fields",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a new product\ncy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    // price: 42, missing\n  },\n  failOnStatusCode: false\n}).then(req => {\n  expect(req.status).to.be.eq(400);\n  expect(req.body.error).to.be.eq(\"Invalid or missing fields\");\n  expect(req.body.details).to.exist;\n});",
              "err": {},
              "uuid": "1dde2d5a-9db7-445a-84c7-2a10ccd59778",
              "parentUUID": "cb21ba99-1db6-4522-aa31-e351ea9b6a72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check mutation - object created in database",
              "fullTitle": "POST /api/products/:productId/bids check mutation - object created in database",
              "timedOut": null,
              "duration": 213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  body: {\n    price: 42\n  }\n}).then(response => {\n  expect(response.status).to.be.eq(201);\n  const newBid = response.body;\n  cy.request(\"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634\").then(response => {\n    const product = response.body;\n    expect(product.bids.some(bid => bid.id === newBid.id)).to.be.true;\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFmMmZhZGIxLTBkN2UtNDdhNy05ZDViLWVkMDMxZDY2NWQzZSIsInVzZXJuYW1lIjoiYWxpY2UiLCJlbWFpbCI6ImFsaWNlQGV4YW1wbGUuY29tIiwiYWRtaW4iOmZhbHNlLCJpYXQiOjE2Nzk2MTMwMzh9.KcT42jbNXfNR-0I-bTc_qNdAuCid640tXpkzUtDCoao\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/123.0.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 12\n}\nBody: {\"price\":42}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"75\",\n  \"etag\": \"W/\\\"4b-8K3b7zNX6NCTE0RF6SPLmLmHfKg\\\"\",\n  \"date\": \"Fri, 05 Apr 2024 13:37:42 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"error\": \"Invalid or missing fields\",\n  \"details\": [\n    \"Bid.date cannot be null\"\n  ]\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634/bids\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFmMmZhZGIxLTBkN2UtNDdhNy05ZDViLWVkMDMxZDY2NWQzZSIsInVzZXJuYW1lIjoiYWxpY2UiLCJlbWFpbCI6ImFsaWNlQGV4YW1wbGUuY29tIiwiYWRtaW4iOmZhbHNlLCJpYXQiOjE2Nzk2MTMwMzh9.KcT42jbNXfNR-0I-bTc_qNdAuCid640tXpkzUtDCoao\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/123.0.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 12\n}\nBody: {\"price\":42}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"75\",\n  \"etag\": \"W/\\\"4b-8K3b7zNX6NCTE0RF6SPLmLmHfKg\\\"\",\n  \"date\": \"Fri, 05 Apr 2024 13:37:42 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"error\": \"Invalid or missing fields\",\n  \"details\": [\n    \"Bid.date cannot be null\"\n  ]\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://localhost:63086/__cypress/runner/cypress_runner.js:133123:72)\n    at tryCatcher (http://localhost:63086/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63086/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:63086/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:63086/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:63086/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (http://localhost:63086/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:63086/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:63086/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:63086/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://frontend/./cypress/e2e/backend/endpoints.cy.js:536:7)",
                "diff": null
              },
              "uuid": "febceeff-a602-49a9-b9a0-3a3e6976cde6",
              "parentUUID": "cb21ba99-1db6-4522-aa31-e351ea9b6a72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5a6b1ad-4efe-49e7-ba89-bdd163ae1ddd",
            "1dde2d5a-9db7-445a-84c7-2a10ccd59778"
          ],
          "failures": [
            "d1b99782-2985-4ccc-8eff-861c5ffb2f55",
            "febceeff-a602-49a9-b9a0-3a3e6976cde6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0754fba3-06ff-435d-bb61-c61970d2ab83",
          "title": "DELETE /bids/:bidId",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 401 - not authorized",
              "fullTitle": "DELETE /bids/:bidId returns 401 - not authorized",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: endpoint,\n  headers: {\n    Authorization: `Bearer BAD_TOKEN`\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 401);",
              "err": {},
              "uuid": "4f96aab3-6bf9-459a-8f25-3fe2a9066cd0",
              "parentUUID": "0754fba3-06ff-435d-bb61-c61970d2ab83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 204 - success, when owner edit",
              "fullTitle": "DELETE /bids/:bidId returns 204 - success, when owner edit",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.charlyToken}`\n  }\n}).its(\"status\").should(\"equal\", 204);",
              "err": {},
              "uuid": "4d2810be-e471-4b62-8a2c-5c5ecd819c04",
              "parentUUID": "0754fba3-06ff-435d-bb61-c61970d2ab83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 403 - forbidden, when non owner edit",
              "fullTitle": "DELETE /bids/:bidId returns 403 - forbidden, when non owner edit",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.bobToken}`\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 403);",
              "err": {},
              "uuid": "b2bb1c0d-0d12-4668-ab1c-b740e7e46c43",
              "parentUUID": "0754fba3-06ff-435d-bb61-c61970d2ab83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 204 - success, when admin edit",
              "fullTitle": "DELETE /bids/:bidId returns 204 - success, when admin edit",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: endpoint,\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.adminToken}`\n  }\n}).its(\"status\").should(\"equal\", 204);",
              "err": {},
              "uuid": "e1b9786c-5433-4c9a-b670-1d33de86e075",
              "parentUUID": "0754fba3-06ff-435d-bb61-c61970d2ab83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 404 - not found",
              "fullTitle": "DELETE /bids/:bidId returns 404 - not found",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: \"http://localhost:3000/api/products/not-existing-id\",\n  method: \"DELETE\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  },\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 404);",
              "err": {},
              "uuid": "158736e5-4ad5-40d6-bf59-a0075df6c5b4",
              "parentUUID": "0754fba3-06ff-435d-bb61-c61970d2ab83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check mutation - object deleted in database",
              "fullTitle": "DELETE /bids/:bidId check mutation - object deleted in database",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: \"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634\",\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${_tokens.aliceToken}`\n  }\n}).then(response => {\n  const product = response.body;\n  expect(product.bids.some(bid => bid.id === \"8ccc6e79-f3c9-43e9-b47e-5be7b84d8de7\")).to.be.true;\n  cy.request({\n    url: endpoint,\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${_tokens.charlyToken}`\n    }\n  }).then(response => {\n    expect(response.status).to.be.eq(204);\n    cy.request({\n      url: \"http://localhost:3000/api/products/a0f7c522-78f8-442e-a55d-642cfe566634\",\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${_tokens.aliceToken}`\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      const product = response.body;\n      expect(product.bids.some(bid => bid.id === \"8ccc6e79-f3c9-43e9-b47e-5be7b84d8de7\")).to.be.false;\n    });\n  });\n});",
              "err": {},
              "uuid": "0caa9d25-3a9f-422f-b5df-769a3b5433da",
              "parentUUID": "0754fba3-06ff-435d-bb61-c61970d2ab83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f96aab3-6bf9-459a-8f25-3fe2a9066cd0",
            "4d2810be-e471-4b62-8a2c-5c5ecd819c04",
            "b2bb1c0d-0d12-4668-ab1c-b740e7e46c43",
            "e1b9786c-5433-4c9a-b670-1d33de86e075",
            "158736e5-4ad5-40d6-bf59-a0075df6c5b4",
            "0caa9d25-3a9f-422f-b5df-769a3b5433da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6f13d0dc-a0e4-4ab4-95f2-d1304990fed2",
          "title": "GET /api/users/:userId",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns 404 - not found",
              "fullTitle": "GET /api/users/:userId returns 404 - not found",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: \"http://localhost:3000/api/users/not-existing-id\",\n  failOnStatusCode: false\n}).its(\"status\").should(\"equal\", 404);",
              "err": {},
              "uuid": "d59fe137-ee99-4c48-ad9f-f00287ee319d",
              "parentUUID": "6f13d0dc-a0e4-4ab4-95f2-d1304990fed2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns 200 - success",
              "fullTitle": "GET /api/users/:userId returns 200 - success",
              "timedOut": null,
              "duration": 2272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"http://localhost:3000/api/users/1f2fadb1-0d7e-47a7-9d5b-ed031d665d3e\").then(response => {\n  expect(response.status).to.be.eq(200);\n  expect(response.headers[\"content-type\"]).to.contains(\"application/json\");\n  const user = response.body;\n  expect(user.id).to.eq(\"1f2fadb1-0d7e-47a7-9d5b-ed031d665d3e\");\n  expect(user.username).to.be.eq(\"alice\");\n  expect(user.admin).to.be.false;\n  for (let product of user.products) {\n    expect(product.id).to.be.a(\"string\");\n    expect(product.id).to.match(_pattern.UUIDv4);\n    expect(product.description).to.be.a(\"string\");\n    expect(product.category).to.be.a(\"string\");\n    expect(product.originalPrice).to.be.a(\"number\");\n    expect(product.pictureUrl).to.be.a(\"string\");\n    expect(product.endDate).to.be.a(\"string\");\n    expect(product.endDate).to.match(_pattern.IOS8601);\n  }\n  for (let bid of user.bids) {\n    expect(bid.id).to.be.a(\"string\");\n    expect(bid.id).to.match(_pattern.UUIDv4);\n    expect(bid.price).to.be.a(\"number\");\n    expect(bid.date).to.be.a(\"string\");\n    expect(bid.date).to.match(_pattern.IOS8601);\n    expect(bid.product.id).to.a(\"string\");\n    expect(bid.product.id).to.match(_pattern.UUIDv4);\n    expect(bid.product.name).to.a(\"string\");\n  }\n});",
              "err": {},
              "uuid": "40e4973d-7a08-401e-92b3-16e3f08452d5",
              "parentUUID": "6f13d0dc-a0e4-4ab4-95f2-d1304990fed2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d59fe137-ee99-4c48-ad9f-f00287ee319d",
            "40e4973d-7a08-401e-92b3-16e3f08452d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}